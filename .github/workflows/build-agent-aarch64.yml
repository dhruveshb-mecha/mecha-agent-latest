name: Agent - Build aarch64
on:
  push:
    branches:
      - main
      - dev
      - dev-build

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUST_BACKTRACE: short
  RUSTUP_MAX_RETRIES: 10
  MACOSX_DEPLOYMENT_TARGET: 10.7
  CARGO_NET_GIT_FETCH_WITH_CLI: true

jobs:
  build:
    name: Build
    strategy:
      fail-fast: true
      matrix:
        include:
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-22.04
            name: mecha-agent-aarch64-unknown-linux-gnu.tar.gz
            package: mecha_agent
            path: .

    runs-on: ${{ matrix.os }}
    continue-on-error: false
    env:
      RUSTFLAGS: ${{ matrix.rustflags || '' }}
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v4

      - name: Install Rust 1.75.0
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          rustup default 1.75.0

      - name: Install cross
        run: cargo install cross --git https://github.com/cross-rs/cross --branch main

      - name: Install cargo-deb
        run: cargo install cargo-deb

      - name: Install gcc for arm64
        run: sudo apt install gcc-11-aarch64-linux-gnu

      - name: Add arm64 architecture
        run: sudo dpkg --add-architecture arm64

      - name: Create sources.list
        run: |
          sudo touch /etc/apt/sources.list.d/arm-cross-compile-sources.list
          echo "deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ focal main restricted" | sudo tee -a /etc/apt/sources.list.d/arm-cross-compile-sources.list
          echo "deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ focal-updates main restricted" | sudo tee -a /etc/apt/sources.list.d/arm-cross-compile-sources.list
          echo "deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ focal universe" | sudo tee -a /etc/apt/sources.list.d/arm-cross-compile-sources.list
          echo "deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ focal-updates universe" | sudo tee -a /etc/apt/sources.list.d/arm-cross-compile-sources.list
          echo "deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ focal multiverse" | sudo tee -a /etc/apt/sources.list.d/arm-cross-compile-sources.list
          echo "deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ focal-updates multiverse" | sudo tee -a /etc/apt/sources.list.d/arm-cross-compile-sources.list
          echo "deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ focal-backports main restricted universe multiverse" | sudo tee -a /etc/apt/sources.list.d/arm-cross-compile-sources.list
      - name: Update default sources.list
        run: |
          sudo sed -i 's/^deb /deb [arch=amd64] /' /etc/apt/sources.list
      - name: Update apt
        run: sudo apt update

      - name: Install dependencies
        run: |
          sudo apt install \
          libssl-dev \
          libssl-dev:arm64 \
          libprotobuf-dev \
          libprofobuf-dev:arm64 \
          protobuf-compiler \
          protobuf-compiler:arm64

      - name: Build [${{ matrix.package }}]
        if: matrix.os == 'ubuntu-22.04'
        env:
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc
        continue-on-error: true
        run: |
          cd ${{ matrix.path }}
          cargo --config net.git-fetch-with-cli=true fetch
          cross build --release --target ${{ matrix.target }} --package ${{ matrix.package }}
          ls -la
      - name: Package deb [${{ matrix.package }}]
        if: matrix.os == 'ubuntu-22.04'
        env:
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc
        continue-on-error: true
        run: |
          cd ${{ matrix.path }}
          cargo deb --no-build --target ${{matrix.target}} --package ${{ matrix.package }}
          ls -la
      - name: Prepare artifacts [${{ matrix.package }}]
        if: matrix.os == 'ubuntu-22.04'
        run: |
          cd target/${{ matrix.target }}/release/
          tar czvf ../../../build/${{matrix.name}} ${{ matrix.package }}
          cd -
          cd target/${{ matrix.target }}/debian/
          mv *.deb ../../../build/
          cd -
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: ./build
